@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@using ServantApply.Common.Models
@using ServantApply.WebApp.Helpers
@model Job
@{
    ViewData["Title"] = "新增岗位";
}
@*<script>
function operate() {
            // jquery 表单提交
            $("#form").ajaxSubmit(function(message) {
                alert("创建成功");
               });

            return false; // 必须返回false，否则表单会自己再做一次提交操作，并且页面跳转
        }
</script>*@
@using (Html.BeginForm("save","job", new { name = "form", id = "form" }))
{
<div class="container" style="height:750px;" id="jobList">
        <div class="row">
            <h1><span class="glyphicon glyphicon-pencil"></span>@ViewData["Title"]<a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-primary" style="float:right;">返回</a></h1>
        </div>
        <div class="form-group">
            <label for="Name">岗位名称</label>
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Content">岗位内容</label>
            @Html.TextBoxFor(model => model.Content, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Content, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Organization">所属单位</label>
            @Html.TextBoxFor(model => model.Organization, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Organization, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Address">所在地址</label>
            @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="AgeAsk">年龄要求</label>
            @Html.TextBoxFor(model => model.AgeAsk, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AgeAsk, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <div>
                @Html.Label("SexAsk", "性别要求")
            </div>   
            <div class="form-inline">
                @Html.DropDownListFor(model => model.SexAsk, SexTypeHelper.GetItems(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SexAsk, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.Label("EducationAsk", "学历要求")
            </div>
            <div class="form-inline">
                @Html.DropDownListFor(modl => Model.EducationAsk, EducationTypeHelper.GetItems(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EducationAsk, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div style="width:100px;margin:0 auto;">
            <button type="submit" class="btn btn-danger" style="float:right;">创建</button>
        </div>
 </div>
}

