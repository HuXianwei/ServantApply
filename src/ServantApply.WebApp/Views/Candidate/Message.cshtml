@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@using ServantApply.Common.Models
@using ServantApply.WebApp.Helpers
@model Candidate
@{
    ViewData["Title"] = "填写报名信息";
}
@using (Html.BeginForm("Create", "Candidate", new { name = "form", id = "form" }))
{
    <div class="container"  id="jobList">
        <div class="row">
            <h1><span class="glyphicon glyphicon-pencil"></span>@ViewData["Title"]</h1>
        </div>
        <div class="form-group">
            <label for="TrueName">真实姓名</label>
            @Html.TextBoxFor(model => model.TrueName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TrueName, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Tell">电话</label>
            @Html.TextBoxFor(model => model.Tell, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Tell, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Address">地址</label>
            @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="School">学校</label>
            @Html.TextBoxFor(model => model.School, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.School, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Age">年龄</label>
            @Html.TextBoxFor(model => model.Age, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Age, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Nation">民族</label>
            @Html.TextBoxFor(model => model.Nation, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Nation, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="Card">身份证号</label>
            @Html.TextBoxFor(model => model.Card, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Card, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <div>
                @Html.Label("Sex", "性别")
            </div>
            <div class="form-inline">
                @Html.DropDownListFor(model => model.Sex, SexTypeHelper.GetItems(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sex, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.Label("Education", "学历")
            </div>
            <div class="form-inline">
                @Html.DropDownListFor(modl => Model.Education, EducationTypeHelper.GetItems(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Education, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
       <div class="form-group">
          <div>
            @Html.Label("Politics", "政治面貌")
          </div>
          <div class="form-inline">
            @Html.DropDownListFor(modl => Model.Politics, PoliticsTypeHelper.GetItems(), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Politics, "", htmlAttributes: new { @class = "text-danger" })
          </div>
        </div>
        <div>
            <span style="margin-right:100px;margin-left:400px"><button type="submit" class="btn btn-primary">确定</button></span>
        </div>
  </div>
}

